#ifndef _ASV_VOLTAGE_TABLE_H_
#define _ASV_VOLTAGE_TABLE_H_

#include <mach/asv-exynos.h>
#include <mach/asv-exynos_cal.h>
#include <mach/map.h>

#define CPU_MAX_VOLT		(1393750)
#define G3D_MAX_VOLT		(1187500)
#define INT_MAX_VOLT		(1081250)
#define MIF_MAX_VOLT		(1075000)

#define SYSC_DVFS_END_LVL_CPU		16
#define SYSC_DVFS_END_LVL_G3D		6
#define SYSC_DVFS_END_LVL_MIF		8
#define SYSC_DVFS_END_LVL_INT		3
#define MAX_ASV_GROUP				16

#if 0 /* This physical address is used for firmware */
#define CHIPID_BASE         0x10000000
#define CHIPID_ASV_TBL_BASE 0x10004000
#endif

#define ASV_RUNTIME		(0)

#define SSA_VOLT_BASE	850000
#define SSA_VOLT_STEP	 25000
#define SSA_MAX_LIMIT	4

//#define EXYNOS3475_SYSREG_CPU_ADDR(x)		(EXYNOS3475_VA_SYSREG_CPU + (x))
//#define EXYNOS3475_SYSREG_G3D_ADDR(x)		(EXYNOS3475_VA_SYSREG_G3D + (x))
#define EXYNOS3475_SYSREG_CPU_ADDR(x)		(S5P_VA_SYSREG_CPU + (x))
#define EXYNOS3475_SYSREG_G3D_ADDR(x)		(S5P_VA_SYSREG_G3D + (x))

// EMA
#define EXYNOS3475_SYSREG_CPU_EMA_CON               EXYNOS3475_SYSREG_CPU_ADDR(0x330)
#define EXYNOS3475_SYSREG_CPU_EMA_HD_CON            EXYNOS3475_SYSREG_CPU_ADDR(0x334)
#define EXYNOS3475_SYSREG_CPU_EMA_STATUS            EXYNOS3475_SYSREG_CPU_ADDR(0x340)
#define EXYNOS3475_SYSREG_CPU_EMA_HD_STATUS         EXYNOS3475_SYSREG_CPU_ADDR(0x344)
#define EXYNOS3475_SYSREG_CPU_EMA_RF1_HD_CON_CPU    EXYNOS3475_SYSREG_CPU_ADDR(0x350)
#define EXYNOS3475_SYSREG_CPU_EMA_RF1_HS_CON_CPU    EXYNOS3475_SYSREG_CPU_ADDR(0x354)

#define EXYNOS3475_SYSREG_G3D_EMA_RA1_HD_CON        EXYNOS3475_SYSREG_G3D_ADDR (0x300)
#define EXYNOS3475_SYSREG_G3D_EMA_RA1_HS_CON        EXYNOS3475_SYSREG_G3D_ADDR (0x304)
#define EXYNOS3475_SYSREG_G3D_EMA_RA2_HD_CON        EXYNOS3475_SYSREG_G3D_ADDR (0x308)
#define EXYNOS3475_SYSREG_G3D_EMA_RF1_HD_CON        EXYNOS3475_SYSREG_G3D_ADDR (0x310)
#define EXYNOS3475_SYSREG_G3D_EMA_RF1_HS_CON        EXYNOS3475_SYSREG_G3D_ADDR (0x314)
#define EXYNOS3475_SYSREG_G3D_EMA_RF2_HD_CON        EXYNOS3475_SYSREG_G3D_ADDR (0x318)
#define EXYNOS3475_SYSREG_G3D_EMA_RF2_HS_CON        EXYNOS3475_SYSREG_G3D_ADDR (0x31C)
#define EXYNOS3475_SYSREG_G3D_EMA_UHD_CON           EXYNOS3475_SYSREG_G3D_ADDR (0x320)

#define CHIPID_BASE				S5P_VA_CHIPID
#define CHIPID_ASV_TBL_BASE		S5P_VA_CHIPID2
#define CHIPID_ABB_TBL_BASE		S5P_VA_CHIPID3

#define get_asv_cpu_group()     __getbits(CHIPID_ASV_TBL_BASE+0x00,  0,  0xf)
#define get_asv_cpu_modify()    __getbits(CHIPID_ASV_TBL_BASE+0x00,  4,  0xf)
#define get_asv_cpu_boost0()    __getbits(CHIPID_ASV_TBL_BASE+0x00,  8,  0x3)
#define get_asv_cpu_boost1()    __getbits(CHIPID_ASV_TBL_BASE+0x00,  10, 0x3)
#define get_asv_cpu_ssa()       __getbits(CHIPID_ASV_TBL_BASE+0x00,  12, 0xf)

#define get_asv_g3d_group()     __getbits(CHIPID_ASV_TBL_BASE+0x00,  16, 0xf)
#define get_asv_g3d_modify()    __getbits(CHIPID_ASV_TBL_BASE+0x00,  20, 0xf)
#define get_asv_g3d_boost0()    __getbits(CHIPID_ASV_TBL_BASE+0x00,  24, 0x3)
#define get_asv_g3d_boost1()    __getbits(CHIPID_ASV_TBL_BASE+0x00,  26, 0x3)
#define get_asv_g3d_ssa()       __getbits(CHIPID_ASV_TBL_BASE+0x00,  28, 0xf)

#define get_asv_mif_group()     __getbits(CHIPID_ASV_TBL_BASE+0x04,  0,  0xf)
#define get_asv_mif_modify()    __getbits(CHIPID_ASV_TBL_BASE+0x04,  4,  0xf)
#define get_asv_mif_boost0()    __getbits(CHIPID_ASV_TBL_BASE+0x04,  8,  0x3)
#define get_asv_mif_boost1()    __getbits(CHIPID_ASV_TBL_BASE+0x04,  10, 0x3)
#define get_asv_mif_ssa()       __getbits(CHIPID_ASV_TBL_BASE+0x04,  12, 0xf)

#define get_asv_int_group()     __getbits(CHIPID_ASV_TBL_BASE+0x04,  16, 0xf)
#define get_asv_int_modify()    __getbits(CHIPID_ASV_TBL_BASE+0x04,  20, 0xf)
#define get_asv_int_boost0()    __getbits(CHIPID_ASV_TBL_BASE+0x04,  24, 0x3)
#define get_asv_int_boost1()    __getbits(CHIPID_ASV_TBL_BASE+0x04,  26, 0x3)
#define get_asv_int_ssa()       __getbits(CHIPID_ASV_TBL_BASE+0x04,  28, 0xf)

#define get_asv_method()            __getbits(CHIPID_ASV_TBL_BASE+0x08,  7,  0x1)
#define get_asv_table_version()     __getbits(CHIPID_ASV_TBL_BASE+0x08,  0,  0x7f)
//#define get_asv_ids()               __getbits(CHIPID_ASV_TBL_BASE+0x08,  8,  0xff)
//#define get_asv_hpm()               __getbits(CHIPID_ASV_TBL_BASE+0x08,  16, 0xff)
//#define get_asv_ro()                __getbits(CHIPID_ASV_TBL_BASE+0x08,  24, 0xff)

u32 get_asv_ids()
{
	return __getbits(CHIPID_ASV_TBL_BASE+0x08,  8,  0xff);
}

u32 get_asv_hpm()
{
	return __getbits(CHIPID_ASV_TBL_BASE+0x08,  16, 0xff);
}

u32 get_asv_ro()
{
	return __getbits(CHIPID_ASV_TBL_BASE+0x08,  24, 0xff);
}

const u32 ema_table_cpu[SYSC_DVFS_END_LVL_CPU+1][MAX_ASV_GROUP]  = {	
	[0]  = {	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	},
	[1]  = {	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	3,	3,	},
	[2]  = {	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	3,	3,	3,	3,	3,	},
	[3]  = {	1,	1,	1,	1,	1,	1,	1,	1,	3,	3,	3,	3,	3,	3,	3,	3,	},
	[4]  = {	1,	1,	1,	1,	1,	3,	3,	3,	3,	3,	3,	4,	4,	4,	4,	4,	},
	[5]  = {	3,	3,	3,	3,	3,	3,	3,	3,	4,	4,	4,	4,	4,	4,	4,	4,	},
	[6]  = {	3,	3,	3,	3,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	},
	[7]  = {	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	},
	[8]  = {	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	},
	[9]  = {	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	},
	[10] = {	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	},
	[11] = {	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	},
	[12] = {	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	},
	[13] = {	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	},
	[14] = {	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	},
	[15] = {	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	},
};
const u32 ema_table_g3d[SYSC_DVFS_END_LVL_G3D+1][MAX_ASV_GROUP]  = {
	[0] = {	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	3,	3,	},
	[1] = {	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	3,	3,	3,	3,	},
	[2] = {	1,	1,	1,	1,	1,	1,	1,	3,	3,	3,	3,	3,	3,	4,	4,	4,	},
	[3] = {	3,	3,	3,	3,	3,	3,	3,	4,	4,	4,	4,	4,	4,	4,	4,	4,	},
	[4] = {	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	},
	[5] = {	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	},
};


const u32 ids_hpm_table_cpu[4][MAX_ASV_GROUP] = {
	[0] = { 0,  3,  4,  6,  7,  8, 10, 12, 15, 18, 23, 28, 35, 43, 44, 45, },
	[1] = { 0,  3,  5,  6,  7,  9, 11, 14, 17, 22, 27, 34, 42, 43, 44, 45, },
	[2] = { 0, 17, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 43, 44, 45, },
	[3] = { 0, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 43, 44, 45, },
};

const u32 volt_table_cpu[SYSC_DVFS_END_LVL_CPU+1][MAX_ASV_GROUP+1]  = {
	[0]  = { 1703, 1250000, 1250000, 1225000, 1225000, 1212500, 1212500, 1200000, 1200000, 1187500, 1187500, 1175000, 1175000, 1162500, 1162500, 1150000, 1150000, },
	[1]  = { 1599, 1250000, 1250000, 1237500, 1237500, 1225000, 1225000, 1212500, 1212500, 1200000, 1200000, 1187500, 1187500, 1175000, 1175000, 1162500, 1162500, },
	[2]  = { 1495, 1200000, 1200000, 1187500, 1175000, 1162500, 1150000, 1137500, 1125000, 1112500, 1100000, 1087500, 1075000, 1062500, 1050000, 1050000, 1050000, },
	[3]  = { 1404, 1150000, 1150000, 1137500, 1125000, 1112500, 1100000, 1087500, 1075000, 1062500, 1050000, 1043750, 1031250, 1018750, 1000000, 1000000, 1000000, },
	[4]  = { 1300, 1100000, 1100000, 1087500, 1068750, 1056250, 1043750, 1025000, 1012500, 1012500, 1000000,  987500,  975000,  956250,  950000,  950000,  950000,  },
	[5]  = { 1196, 1050000, 1050000, 1043750, 1043750, 1031250, 1018750, 1000000,  987500,  975000,  956250,  943750,  931250,  912500,  900000,  887500,  887500,  },
	[6]  = { 1105, 1000000, 1000000,  987500,  987500,  975000,  975000,  962500,  962500,  950000,  937500,  925000,  912500,  900000,  887500,  850000,  850000, },
	[7]  = { 1001,  950000,  950000,  943750,  943750,  931250,  918750,  906250,  900000,  887500,  881250,  868750,  856250,  850000,  850000,  825000,  825000,  },
	[8]  = {  897,  900000,  900000,  887500,  881250,  875000,  862500,  856250,  850000,  850000,  825000,  825000,  825000,  825000,  825000,  825000,  825000, },
	[9]  = {  806,  850000,  850000,  825000,  825000,  812500,  800000,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500, },
	[10]  = {  702,  800000,  800000,  787500,  787500,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000, },
	[11] = {  598,  800000,  800000,  787500,  787500,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000, },
	[12] = {  507,  800000,  800000,  787500,  787500,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000, },
	[13] = {  403,  750000,  750000,  737500,  737500,  725000,  725000,  712500,  712500,  700000,  700000,  700000,  700000,  700000,  700000,  700000,  700000,},
	[14] = {  299,  750000,  750000,  737500,  737500,  725000,  725000,  712500,  712500,  700000,  700000,  700000,  700000,  700000,  700000,  700000,  700000, },
	[15] = {  195,  650000,  637500,  625000,  612500,  600000,  600000,  600000,  600000,  600000,  600000,  600000,  600000,  600000,  600000,  600000,  600000, },
};
const u32 volt_table_g3d[SYSC_DVFS_END_LVL_G3D+1][MAX_ASV_GROUP+1]  = {
	[0] = { 840, 1100000, 1100000, 1093750, 1081250, 1068750, 1062500, 1050000, 1037500, 1031250, 1018750, 1012500, 1000000, 993750,  987500,  987500,  987500, },
	[1] = { 667, 1050000, 1050000, 1037500, 1025000, 1012500, 1006250,  993750,  987500,  981250,  968750,  962500,  950000,  950000,  950000,  950000,  950000, },
	[2] = { 533, 1000000, 1000000,  987500,  968750,  962500,  956250,  950000,  900000,  900000,  900000,  900000,  900000,  900000,  900000,  900000,  900000, },
	[3] = { 350,  900000,  900000,  893750,  887500,  881250,  868750,  862500,  856250,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000, },
	[4] = { 266,  800000,  800000,  787500,  787500,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000, },
	[5] = { 160,  800000,  800000,  787500,  787500,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000, },
};
const u32 volt_table_mif[SYSC_DVFS_END_LVL_MIF+1][MAX_ASV_GROUP+1]  = {
	[0] = { 825, 1156250, 1143750, 1131250, 1112500, 1100000, 1087500, 1075000, 1062500, 1050000, 1037500, 1025000, 1012500, 1000000, 987500,  975000,  962500, },
	[1] = { 728, 1000000, 1000000,  987500,  975000,  962500,  962500,  956250,  950000,  943750,  931250,  918750,  906250,  900000,  887500,  875000,  875000, },
	[2] = { 666,  956250,  956250,  943750,  931250,  925000,  912500,  906250,  893750,  887500,  881250,  868750,  862500,  850000,  850000,  850000,  850000, },
	[3] = { 559,  893750,  893750,  881250,  875000,  868750,  862500,  856250,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000, },
	[4] = { 413,  850000,  850000,  843750,  837500,  831250,  825000,  812500,  806250,  800000,  800000,  800000,  800000,  800000,  800000,  800000,  800000, },
	[5] = { 338,  850000,  850000,  843750,  837500,  831250,  825000,  812500,  806250,  800000,  800000,  800000,  800000,  800000,  800000,  800000,  800000, },
	[6] = { 273,  850000,  850000,  843750,  837500,  831250,  825000,  812500,  806250,  800000,  800000,  800000,  800000,  800000,  800000,  800000,  800000, },
	[7] = { 200,  850000,  850000,  843750,  837500,  831250,  825000,  812500,  806250,  800000,  800000,  800000,  800000,  800000,  800000,  800000,  800000, },
};
const u32 volt_table_int[SYSC_DVFS_END_LVL_INT+1][MAX_ASV_GROUP+1]  = {
	[0] = { 400,  1068750, 1068750, 1056250, 1043750, 1025000, 1012500, 1012500, 1000000, 987500, 975000, 956250, 950000, 950000, 950000, 950000, 950000, },
	[1] = { 333,  987500,  987500,  975000, 962500, 950000, 943750, 931250, 918750, 906250, 900000, 887500, 875000, 862500, 856250, 850000, 850000, },
	[2] = { 275,  918750,  918750,  906250, 893750, 887500, 875000, 868750, 856250, 850000, 843750, 837500, 831250, 825000, 812500,  806250, 800000, },
};


const u32 volt_table_cpu_V02[SYSC_DVFS_END_LVL_CPU+1][MAX_ASV_GROUP+1]  = {
	[0]  = { 1703, 1393750, 1393750, 1387500, 1368750, 1343750, 1325000, 1306250, 1287500, 1268750, 1243750, 1225000, 1212500, 1193750, 1175000, 1175000, 1175000, },
	[1]  = { 1599, 1300000, 1300000, 1293750, 1287500, 1281250, 1275000, 1268750, 1262500, 1256250, 1250000, 1243750, 1225000, 1212500, 1193750, 1193750, 1193750, },
	[2]  = { 1495, 1250000, 1250000, 1243750, 1225000, 1212500, 1193750, 1175000, 1162500, 1143750, 1125000, 1106250, 1050000, 1043750, 1031250, 1031250, 1031250, },
	[3]  = { 1404, 1200000, 1200000, 1187500, 1175000, 1162500, 1150000, 1137500, 1125000, 1112500, 1100000, 1087500, 1075000, 1062500, 1050000, 1050000, 1050000, },
	[4]  = { 1300, 1150000, 1150000, 1137500, 1125000, 1112500, 1100000, 1087500, 1075000, 1062500, 1050000, 1043750, 1031250, 1018750, 1000000, 1000000, 1000000, },
	[5]  = { 1196, 1100000, 1100000, 1087500, 1068750, 1056250, 1043750, 1025000, 1012500, 1012500, 1000000,  987500,  975000,  956250,  950000,  950000,  950000, },
	[6]  = { 1105, 1050000, 1050000, 1043750, 1043750, 1031250, 1018750, 1000000,  987500,  975000,  956250,  943750,  931250,  912500,  900000,  887500,  887500, },
	[7]  = { 1001, 1000000, 1000000,  987500,  987500,  975000,  975000,  962500,  962500,  950000,  937500,  925000,  912500,  900000,  887500,  850000,  850000, },
	[8]  = {  897,  950000,  950000,  943750,  943750,  931250,  918750,  906250,  900000,  887500,  881250,  868750,  856250,  850000,  850000,  825000,  825000, },
	[9]  = {  806,  900000,  900000,  887500,  881250,  875000,  862500,  856250,  850000,  850000,  825000,  825000,  825000,  825000,  825000,  825000,  825000, },
	[10]  = {  702,  850000,  850000,  825000,  825000,  812500,  800000,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500, },
	[11] = {  598,  850000,  850000,  825000,  825000,  812500,  800000,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500, },
	[12] = {  507,  850000,  850000,  825000,  825000,  812500,  800000,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500, },
	[13] = {  403,  800000,  800000,  787500,  787500,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000, },
	[14] = {  299,  800000,  800000,  787500,  787500,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000,  750000, },
	[15] = {  195,  675000,  662500,  650000,  637500,  625000,  625000,  625000,  625000,  625000,  625000,  625000,  625000,  625000,  625000,  625000,  625000, },
};
const u32 volt_table_g3d_V02[SYSC_DVFS_END_LVL_G3D+1][MAX_ASV_GROUP+1]  = {
	[0] = { 840, 1150000, 1131250, 1112500, 1093750, 1087500, 1075000, 1068750, 1056250, 1050000, 1037500, 1031250, 1018750, 1012500, 1000000, 993750, 981250, },
	[1] = { 667, 1100000, 1081250, 1062500, 1050000, 1037500, 1031250, 1018750, 1012500, 1006250,  993750,  987500,  975000,  968750,  956250, 950000, 943750, },
	[2] = { 533, 1000000,  987500,  968750,  956250,  943750,  937500,  931250,  918750,  912500,  906250,  893750,  887500,  881250,  868750, 862500, 856250, },
	[3] = { 350,  881250,  868750,  856250,  843750,  837500,  831250,  825000,  818750,  812500,  806250,  800000,  793750,  787500,  787500, 787500, 787500, },
	[4] = { 266,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500, 787500, 787500, },
	[5] = { 160,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500, 787500, 787500, },
};
const u32 volt_table_mif_V02[SYSC_DVFS_END_LVL_MIF+1][MAX_ASV_GROUP+1]  = {
	[0] = { 825,  1075000, 1075000, 1062500, 1056250, 1043750, 1031250, 1018750, 1006250, 987500, 975000, 962500, 956250, 937500, 925000, 925000, 925000, },
	[1] = { 728,  1025000, 1025000, 1012500, 993750,  981250,  968750,  956250,  937500,  925000, 912500, 893750, 887500,  887500, 887500, 887500, 887500, },
	[2] = { 666,  968750,  968750,  956250,  950000,  937500,  925000,  912500,  900000,  887500,  875000, 862500, 850000, 850000, 850000, 850000, 850000, },
	[3] = { 559,  912500,  912500,  900000,  893750,  881250,  868750,  856250,  850000,  850000,  850000, 850000, 850000, 850000, 850000, 850000, 850000, },
	[4] = { 413,  868750,  868750,  856250,  850000,  843750,  837500,  831250,  825000,  812500,  806250, 800000, 800000, 800000, 800000, 800000, 800000, },
	[5] = { 338,  868750,  868750,  856250,  850000,  843750,  837500,  831250,  825000,  812500,  806250, 800000, 800000, 800000, 800000, 800000, 800000, },
	[6] = { 273,  868750,  868750,  856250,  850000,  843750,  837500,  831250,  825000,  812500,  806250, 800000, 800000, 800000, 800000, 800000, 800000, },
	[7] = { 200,  868750,  868750,  856250,  850000,  843750,  837500,  831250,  825000,  812500,  806250, 800000, 800000, 800000, 800000, 800000, 800000, },
};
const u32 volt_table_int_V02[SYSC_DVFS_END_LVL_INT+1][MAX_ASV_GROUP+1]  = {
	[0] = { 400, 1081250, 1081250, 1062500, 1050000, 1037500, 1031250, 1018750, 1012500, 1006250, 993750, 987500, 975000, 968750, 956250, 950000, 943750, },
	[1] = { 333, 1006250, 1006250, 987500, 975000, 962500, 943750, 931250, 912500, 900000, 881250, 868750, 856250, 850000, 843750,  837500,  837500, },
	[2] = { 275,  925000, 925000,  918750, 906250, 900000, 887500, 875000, 862500, 850000, 843750, 837500, 831250, 825000, 812500,  806250,  800000, },
};

#endif // _ASV_VOLTAGE_TABLE_H_

